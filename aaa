package com.demo.crud.controller;

import java.util.List;

import javax.servlet.http.HttpServletRequest;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.ModelMap;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.servlet.view.RedirectView;

import com.demo.crud.entities.Employee;
import com.demo.crud.service.EmployeeService;

@Controller
@RequestMapping(value = "employee")
public class EmployeeController {
	@Autowired
	private EmployeeService employeeService;

	@RequestMapping(method = RequestMethod.GET)
	public String index(ModelMap modelMap) {
		modelMap.put("employees", employeeService.getAllEmployee());
		return "employee/index";
	}

	@RequestMapping(value = "create", method = RequestMethod.POST)
	public String create(HttpServletRequest rq) {
		Employee emp = new Employee();
		emp.setAddress(rq.getParameter("address").trim());
		emp.setEmail(rq.getParameter("email").trim());
		emp.setName(rq.getParameter("name").trim());
		emp.setPhone(rq.getParameter("phone").trim());
		employeeService.saveOrUpdate(emp);
		return "redirect:/employee";
	}

	@RequestMapping(value = "update", method = RequestMethod.POST)
	public String update(HttpServletRequest rq) {
		int id = Integer.parseInt(rq.getParameter("id"));
		Employee employee = employeeService.getEmployeeById(id);
		employee.setAddress(rq.getParameter("address").trim());
		employee.setEmail(rq.getParameter("email").trim());
		employee.setName(rq.getParameter("name").trim());
		employee.setPhone(rq.getParameter("phone").trim());
		employeeService.saveOrUpdate(employee);
		return "redirect:/employee";
	}

	@RequestMapping(value = "delete", method = RequestMethod.POST)
	public String delete(HttpServletRequest rq) {
		int id = Integer.parseInt(rq.getParameter("id"));
		employeeService.deleteEmployee(id);
		return "redirect:/employee";
	}

	/*
	 * @RequestMapping(value = "{id}", method = RequestMethod.DELETE) void
	 * delete(@PathVariable("records") Integer id) { employeeService.delete(id); }
	 */

	/*
	 * @RequestMapping("/delete/{id}") public String delete(@PathVariable(name =
	 * "id") Integer idfeedback) { employeeService.delete(idfeedback); return
	 * "redirect:/employee"; }
	 */
}






package com.demo.crud.restcontroller;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.util.MimeTypeUtils;
import org.springframework.web.bind.annotation.CrossOrigin;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RestController;

import com.demo.crud.entities.Employee;
import com.demo.crud.service.EmployeeService;

@RestController
@CrossOrigin(origins = "*")
public class EmployeeRestController {
	@Autowired
	private EmployeeService employeeService;

	@RequestMapping(value = "find/{id}", method = RequestMethod.GET, produces = MimeTypeUtils.APPLICATION_JSON_VALUE)
	public ResponseEntity<Employee> find(@PathVariable("id") int id) {
		try {
			return new ResponseEntity<Employee>(employeeService.getEmployeeById(id), HttpStatus.OK);
		} catch (Exception e) {
			return new ResponseEntity<Employee>(HttpStatus.BAD_REQUEST);
		}
	}
	@DeleteMapping("employee/delete/{id}")
	public ResponseEntity<Void> deleteCompany(@PathVariable Integer id) {
		employeeService.deleteEmployee(id);
		return new ResponseEntity<Void>(HttpStatus.OK);
	}

}
